axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
# Extract aligned coordinates from gpagen result
coords <- gpa_result$coords
p <- dim(coords)[1]  # number of landmarks
k <- dim(coords)[2]  # should be 3 (X, Y, Z)
n <- dim(coords)[3]  # number of specimens
# Create a new workbook
wb <- createWorkbook()
# Add a sheet for each specimen
for (i in 1:n) {
df <- as.data.frame(coords[, , i])
colnames(df) <- c("X", "Y", "Z")
df$Landmark <- label_list[[i]]
df <- df[, c("Landmark", "X", "Y", "Z")]
addWorksheet(wb, paste0("Specimen_", i))
writeData(wb, sheet = i, df)
}
# Save the workbook
saveWorkbook(wb, "gpagen_results.xlsx", overwrite = TRUE)
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(n) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
plot3d(coords, type = "s", col = colors[i], size = 0.25, add = (i != 1), axes=FALSE, xlab = "", ylab = "", zlab = "")
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array, scale=FALSE)
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array, scale = FALSE)
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Compute average centroid size
avg_size <- mean(gpa_result$Csize)
# Rescale aligned coordinates to average size
rescaled_coords <- gpa_result$coords
for (i in 1:dim(rescaled_coords)[3]) {
rescaled_coords[, , i] <- rescaled_coords[, , i] * avg_size
}
# Plot the first specimen with labels
open3d()
colors <- rainbow(n) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- rescaled_coords[, , i]
plot3d(coords, type = "s", col = colors[i], size = 0.25, add = (i != 1), axes=FALSE, xlab = "", ylab = "", zlab = "")
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Compute average centroid size
avg_size <- mean(gpa_result$Csize)
# Rescale aligned coordinates to average size
rescaled_coords <- gpa_result$coords
for (i in 1:dim(rescaled_coords)[3]) {
rescaled_coords[, , i] <- rescaled_coords[, , i] * avg_size
}
# Plot the first specimen with labels
open3d()
colors <- rainbow(n) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- rescaled_coords[, , i]
plot3d(coords, type = "s", col = colors[i], size = 0.25, add = (i != 1), axes=FALSE, xlab = "", ylab = "", zlab = "")
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(rescaled_coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(n) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
plot3d(coords, type = "p", col = colors[i], size = 0.25, add = (i != 1), axes=FALSE, xlab = "", ylab = "", zlab = "")
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(n) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
plot3d(coords, type = "s", col = colors[i], size = 0.25, add = (i != 1), axes=FALSE, xlab = "", ylab = "", zlab = "")
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
View(data)
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.25, color = landmark_colors[j])
}
}
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.25, color = colors[j])
}
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.025, color = colors[j])
}
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.0025, color = colors[j])
}
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.0025, color = colors[j])
}
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
legend3d("topright", legend = numbered_labels, col = landmark_colors, pch = 16, cex = 0.8, inset = c(0.02))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.0025, color = colors[j])
}
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
legend3d("topright", legend = numbered_labels, col = colors, pch = 16, cex = 0.8, inset = c(0.02))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.0025, color = colors[j])
}
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
legend3d("topright", legend = numbered_labels, col = colors, pch = 16, cex = 2, inset = c(0.02))
library(rgl)
library(geomorph)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- rainbow(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.0025, color = colors[j])
}
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
legend3d("topright", legend = numbered_labels, col = colors, pch = 16, cex = 1.25, inset = c(0.02))
library(randomcoloR)
install.packages("randomcoloR")
library(rgl)
library(geomorph)
library(randomcoloR)
files <- list.files(path = "C:/Users/Public/Documents/Git/Jax-Programs/R/SkullLandmarkingFiles/", pattern="\\.csv$", full.names=TRUE, recursive=TRUE)
# Read and process each file
landmark_list <- list()
label_list <- list()
for (file in files) {
data <- read.csv(file, skip = 1)
labels <- data[, c("Name")] # Save first column (landmark labels)
landmark_list[[length(landmark_list) + 1]] <- as.matrix(data[, c("X", "Y", "Z")])
label_list[[length(label_list) + 1]] <- labels
}
p <- nrow(landmark_list[[1]])
k <- 3
n <- length(landmark_list)
coords_array <- array(unlist(landmark_list), dim = c(p, k, n))
# Normalize using GPA
gpa_result <- gpagen(coords_array)
# Plot the first specimen with labels
open3d()
colors <- distinctColorPalette(p) # Assign a unique color to each specimen
for (i in 1:n) {
coords <- gpa_result$coords[, , i]
for (j in 1:p) {
spheres3d(coords[j, 1], coords[j, 2], coords[j, 3], radius = 0.0025, color = colors[j])
}
}
axis3d("x", tick = FALSE, labels=FALSE)
axis3d("y", tick = FALSE, labels=FALSE)
axis3d("z", tick = FALSE, labels=FALSE)
numbered_labels <- paste0(seq_along(label_list[[1]]), ": ", label_list[[1]])
text3d(gpa_result$coords[, , 1], texts = numbered_labels, cex = 1, adj = c(0.5, -3))
legend3d("topright", legend = numbered_labels, col = colors, pch = 16, cex = 1.25, inset = c(0.02))
